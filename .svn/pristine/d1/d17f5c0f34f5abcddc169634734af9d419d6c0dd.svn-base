apply plugin: 'com.android.application'

android {
    flavorDimensions "default"
    compileSdkVersion 29
    buildToolsVersion '29.0.3'
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.goodkredit.myapplication"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 118
        versionName "3.8"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
//        //Add config props as build configs
//        rootProject.ext.config.each { p ->
//            buildConfigField 'String', p.key, p.value
//        }

    }

    signingConfigs {
        release {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            storeFile file(properties.getProperty('storeFile'))
            keyAlias properties.getProperty('keyAlias')
            storePassword properties.getProperty('storePassword')
            keyPassword properties.getProperty('keyPassword')
        }
    }

    buildTypes {
        def envConfig
        debug{
            debuggable true
            envConfig = getProps("../config/dev.properties")
            envConfig.each { p ->
                if(p.value == "true" || p.value == "false"){
                    buildConfigField 'boolean', p.key, p.value
                }else{
                    buildConfigField 'String', p.key, p.value
                }
             }

        }

        staging{
            initWith debug
            envConfig = getProps("../config/stg.properties")
            envConfig.each { p ->
                if(p.value == "true" || p.value == "false"){
                    buildConfigField 'boolean', p.key, p.value
                }else{
                    buildConfigField 'String', p.key, p.value
                }
            }
        }

        release {
            //For code shrinking, optimization and obfuscation
            minifyEnabled true
            //Shrinking resources
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            envConfig = getProps("../config/prod.properties")
            envConfig.each { p ->
                if(p.value == "true" || p.value == "false"){
                    buildConfigField 'boolean', p.key, p.value
                }else{
                    buildConfigField 'String', p.key, p.value
                }
            }

        }

        applicationVariants.all { variant ->
            variant.outputs.all {
                def formattedDate = new Date().format('ddMMyyyy')
                def flavor = variant.name
                outputFileName = "goodkredit_${flavor}_${formattedDate}.apk"
            }
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    def envConfig
//    productFlavors{
//        dev{
//            envConfig = getProps("../config/dev.properties")
//            applicationId envConfig.getProperty("APPLICATION_ID").replace("\"","")
//            versionCode envConfig.VERSION_CODE.replace("\"","").toInteger()
//            versionName envConfig.VERSION_NAME.replace("\"","")
//            resValue "string", "app_name", "Goodkredit(Dev)"
//        }
//
//        stg{
//            envConfig = getProps("../config/stg.properties")
//            applicationId envConfig.getProperty("APPLICATION_ID").replace("\"","")
//            versionCode envConfig.VERSION_CODE.replace("\"","").toInteger()
//            versionName envConfig.VERSION_NAME.replace("\"","")
//            resValue "string", "app_name", "Goodkredit(Staging)"
//        }
//
//        prod{
//            envConfig = getProps("../config/prod.properties")
//            applicationId envConfig.getProperty("APPLICATION_ID").replace("\"","")
//            versionCode envConfig.VERSION_CODE.replace("\"","").toInteger()
//            versionName envConfig.VERSION_NAME.replace("\"","")
//        }
//
//    }

}
def getProps(path){
    Properties props = new Properties()
    props.load(new FileInputStream(file(path)))
    return props
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    configurations {
        all*.exclude group: 'com.android.support', module: 'support-v13'
    }
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation(name: 'eghl-sdk-v2.4.6', ext: 'aar')
    implementation project(':android-image-zoom-crop')
    implementation files('libs/android-query-full.0.26.7.jar')
    implementation('com.github.florent37:androidparallax:1.0.1@aar') {
        transitive = true
    }
    implementation project(':freenetAppLinkSdk-v1.4.4')
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.googlecode.json-simple:json-simple:1.1'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'com.google.zxing:core:3.3.2'
    implementation 'com.amazonaws:aws-android-sdk-core:2.13.1'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.13.1'
    implementation 'com.amazonaws:aws-android-sdk-ddb:2.13.1'

    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'in.srain.cube:ultra-ptr:1.0.11'
    implementation 'se.emilsjolander:stickylistheaders:2.7.0'
    implementation 'se.emilsjolander:StickyScrollViewItems:1.1.0'
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'jp.wasabeef:blurry:3.0.0'
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    //Volley
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.0.0'
    implementation 'com.github.AppIntro:AppIntro:5.1.0'
    implementation 'me.himanshusoni.chatmessageview:chat-message-view:1.0.7'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'com.daimajia.slider:library:1.1.5@aar'
    implementation 'com.wdullaer:materialdatetimepicker:3.6.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'jp.wasabeef:recyclerview-animators:2.3.0'
    implementation 'com.github.castorflex.smoothprogressbar:library:1.1.0'
    implementation 'jp.wasabeef:glide-transformations:4.0.1'
    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    implementation 'com.github.smart-fun:XmlToJson:1.4.4'
    implementation 'q.rorbin:badgeview:1.1.3'
    implementation 'com.github.jrejaud:ViewPagerIndicator2:0.0.2'
    implementation 'org.zakariya.stickyheaders:stickyheaders:0.7.6'
    implementation 'com.github.nitrico.stickyscrollview:stickyscrollview:1.0.2'
    implementation 'io.github.inflationx:calligraphy3:3.0.0'
    implementation 'io.github.inflationx:viewpump:1.0.0'
    implementation 'com.github.twinkle942910:monthyearpicker:0.0.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.thoughtbot:expandablerecyclerview:1.3'
    implementation 'at.blogc:expandabletextview:1.0.5'
    implementation 'com.google.firebase:firebase-core:17.2.0'
    implementation 'com.github.rahimlis:badgedtablayout:v1.2'
    implementation 'hk.ids.gws.android.sclick:library:1.0'
    implementation 'com.github.vihtarb:tooltip:0.2.0'
    //SSP
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    //SDP
    implementation 'com.intuit.sdp:sdp-android:1.0.5'
    //KEN BURNS VIEW
    implementation 'com.flaviofaria:kenburnsview:1.0.7'

    //SQR
    implementation 'com.budiyev.android:code-scanner:2.1.0'

    implementation 'com.google.android.gms:play-services-base:17.1.0'
    implementation 'com.google.android.gms:play-services-basement:17.1.1'
    implementation 'com.google.android.gms:play-services-safetynet:17.0.0'
    implementation 'com.google.android.gms:play-services-tasks:17.0.0'
    implementation 'com.github.claudiodegio:MsvSearch:1.2.0'
    implementation 'com.shuhart.stepview:stepview:1.5.1'
    implementation 'id.zelory:compressor:2.1.0'
    implementation 'ru.noties:scrollable:1.3.0'
    implementation 'com.scottyab:secure-preferences-lib:0.1.7'
    implementation 'net.zetetic:android-database-sqlcipher:4.2.0@aar'
    implementation 'com.scottyab:rootbeer-lib:0.0.7'
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
    implementation 'com.synnapps:carouselview:0.1.5'
    implementation 'com.ogaclejapan.smarttablayout:library:2.0.0@aar'

    //CAROUSEL VIEW
    implementation 'com.synnapps:carouselview:0.1.5'

    testImplementation 'junit:junit:4.12'

    //ENCRYPTION
    implementation 'com.scottyab:aescrypt:0.0.1'

    //shimmering effect
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    //for crash handling development
    implementation 'com.github.RohitSurwase.UCE-Handler:uce_handler:1.4'

    implementation "androidx.appcompat:appcompat-resources:1.2.0"
    implementation 'androidx.viewpager2:viewpager2:1.1.0-alpha01'

    //new date picker
    implementation 'com.github.dewinjm:monthyear-picker:1.0.2'
    implementation 'com.whiteelephant:monthandyearpicker:1.3.0'

    //QR code
    implementation 'com.journeyapps:zxing-android-embedded:3.4.0'
}
apply plugin: 'com.google.gms.google-services'
